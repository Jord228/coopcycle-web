# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
  sylius_cart_restaurant_session_key_name: _coopcycle.sylius.cart.restaurant
  apns_default_is_production_env: true
  env(COOPCYCLE_PUBLIC_KEY_FILE): "%kernel.project_dir%/var/jwt/public.pem"
  env(COOPCYCLE_PRIVATE_KEY_FILE): "%kernel.project_dir%/var/jwt/private.pem"
  env(APP_PUBLIC_DIR): "%kernel.project_dir%/web"
  env(APP_LOG_DIR): "%kernel.logs_dir%"
  env(APP_VERSION): dev-master
  secret: "%env(APP_SECRET)%"
  country_iso: "%env(COOPCYCLE_COUNTRY)%"
  region_iso: "%env(COOPCYCLE_REGION)%"
  coopcycle.locale: "%env(COOPCYCLE_LOCALE)%"
  locale: "%coopcycle.locale%"
  database_driver:   pdo_pgsql
  database_host:     "%env(COOPCYCLE_DB_HOST)%"
  database_port:     "%env(COOPCYCLE_DB_PORT)%"
  database_name:     "%env(COOPCYCLE_DB_NAME)%"
  database_user:     "%env(COOPCYCLE_DB_USER)%"
  database_password: "%env(COOPCYCLE_DB_PASSWORD)%"
  locale_regex: an|ca|fr|en|es|eu|de|hu|it|pl|pt_BR|pt_PT|da
  router.request_context.scheme: 'http'
  router.request_context.host: "%env(APP_HOST)%"
  loopeat_enabled: '%env(bool:LOOPEAT_ENABLED)%'
  loopeat_base_url: '%env(LOOPEAT_BASE_URL)%'
  loopeat_client_id: '%env(LOOPEAT_CLIENT_ID)%'
  loopeat_client_secret: '%env(LOOPEAT_CLIENT_SECRET)%'
  tile38_fleet_key: '%database_name%:fleet'
  tile38_doorstep_chan_namespace: '%database_name%'
  centrifugo_namespace: '%database_name%'
  cors_allow_origin: http://localhost
  jwt_public_key_path: "%env(COOPCYCLE_PUBLIC_KEY_FILE)%"
  jwt_private_key_path: "%env(COOPCYCLE_PRIVATE_KEY_FILE)%"
  transactional_address: "%env(COOPCYCLE_MAIL_SENDER_ADDRESS)%"
  transactional_sender_name: "%env(COOPCYCLE_MAIL_SENDER_NAME)%"
  osrm_host: "%env(COOPCYCLE_OSRM_HOST)%"
  is_demo: "%env(bool:COOPCYCLE_DEMO)%"
  sentry_public_dsn: "%env(COOPCYCLE_SENTRY_DSN)%"
  foodtech_enabled: "%env(bool:COOPCYCLE_FOODTECH_ENABLED)%"
  b2b_enabled: '%env(bool:COOPCYCLE_B2B_ENABLED)%'
  sonic_namespace: '%database_name%'
  sonic_secret_password: '%env(SONIC_SECRET_PASSWORD)%'
  restaurant_menu_cache_annotation: 'restaurant_menu_v0.5'
  restaurant_caption_cache_annotation: 'restaurant_caption_v0.1'
  avatar_dir: '%env(APP_PUBLIC_DIR)%/images/avatars/'
  centrifugo_tracking_channel: '$%centrifugo_namespace%_tracking'
  edenred_enabled: '%env(bool:EDENRED_ENABLED)%'
  nucleos_profile.registration.confirmation.enabled: false
  craue_config.cache_adapter.class: Craue\ConfigBundle\CacheAdapter\SymfonyCacheComponentAdapter
  vytal_enabled: '%env(bool:VYTAL_ENABLED)%'
  en_boite_le_plat_enabled: '%env(bool:EN_BOITE_LE_PLAT_ENABLED)%'
  nonprofits_enabled: '%env(bool:NONPROFITS_ENABLED)%'
  dv4cul_enabled: '%env(bool:DV4CUL_ENABLED)%'
  dabba_enabled: '%env(bool:DABBA_ENABLED)%'
  dabba_base_url: '%env(DABBA_BASE_URL)%'
  dabba_client_id: '%env(DABBA_CLIENT_ID)%'
  dabba_client_secret: '%env(DABBA_CLIENT_SECRET)%'
  typesense_shops_collection_name: "shops"
  typesense_products_collection_name: "products"
  colisactiv_enabled: '%env(bool:COLISACTIV_ENABLED)%'
  group_orders_enabled: '%env(bool:GROUP_ORDERS_ENABLED)%'
  business_account_enabled: '%env(bool:BUSINESS_ACCOUNT_ENABLED)%'
  transporters_config: '%env(json:TRANSPORTERS_CONFIG)%'
  billing_enabled: '%env(bool:BILLING_ENABLED)%'


# see https://symfony.com/doc/current/reference/configuration/framework.html
framework:
    #esi:             ~
    secret:          "%secret%"
    router:
        # resource: "%kernel.project_dir%/app/config/routing.yml"
        strict_requirements: ~
        utf8: true
    form:            ~
    csrf_protection: ~
    serializer:      { enable_annotations: true }
    default_locale:  "%locale%"
    trusted_hosts:   ~
    session:
        # https://symfony.com/doc/5.4/session/database.html#store-sessions-in-a-key-value-database-redis
        handler_id: Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler
        cookie_lifetime: 604800 # 7 days
        gc_maxlifetime: 604800 # 7 days
        # Make sure to *NOT* define cookie_samesite, so that it can be changed at runtime
        # https://github.com/coopcycle/coopcycle-web/issues/3084
        # https://github.com/symfony/symfony/issues/45200
        cookie_samesite: ~
        cookie_secure: 'auto'
    fragments:       ~
    http_method_override: true
    assets: ~
    workflows:
        enabled: true
    http_client:
        scoped_clients:
            urbantz.client:
                base_uri: 'https://api.urbantz.com/v2/'
                headers:
                    X-Api-Key: '%env(URBANTZ_API_KEY)%'
            facebook.client:
                base_uri: 'https://graph.facebook.com/'
            browserless.client:
                base_uri: "%env(COOPCYCLE_BROWSERLESS_HOST)%"
            mjml.client:
                base_uri: "%env(COOPCYCLE_MJML_HOST)%/"
            vroom.client:
                base_uri: "http://%env(VROOM_HOST)%/"
            api.client:
                base_uri: "%router.request_context.scheme%://%router.request_context.host%"
            osrm.client:
                base_uri: "http://%osrm_host%"
                timeout: 5.0
            cubejs.client:
                base_uri: "%env(CUBEJS_API_URL)%/"
            woopit.http_client:
                base_uri: '%env(WOOPIT_CARRIER_API_URL)%/'
                headers:
                    X-Api-Version: '%env(WOOPIT_API_VERSION)%'
            dabba.client:
                base_uri: "%env(DABBA_BASE_URL)%/"
            umap.client:
                base_uri: "https://umap.openstreetmap.fr/"
            unsplash.client:
                base_uri: "https://api.unsplash.com/"
                headers:
                    Authorization: 'Client-ID %env(UNSPLASH_ACCESS_KEY)%'
            pixabay.client:
                base_uri: "https://pixabay.com/api/"
                query:
                    key: "%env(PIXABAY_API_KEY)%"
            edenredsynchronizer.client:
                base_uri: "%env(EDENRED_SYNCHRONIZER_BASE_URL)%"
                query:
                    api_key: "%env(EDENRED_SYNCHRONIZER_API_KEY)%"
            insee.client:
                base_uri: "https://api.insee.fr/api-sirene/3.11/"
                headers:
                    X-INSEE-Api-Key-Integration: '%env(INSEE_PORTAIL_API_KEY)%'

# when@test:
#     framework:
#         test: true
#         session:
#             storage_factory_id: session.storage.factory.mock_file
