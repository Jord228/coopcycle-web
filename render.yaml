# CoopCycle on Render (Web + Worker + OSRM)
# Redis and Cron Jobs must be added manually in Render dashboard

services:
  # ---------------- WEB (Symfony/nginx/php-fpm) ----------------
  - type: web
    name: coopcycle-web
    env: docker
    plan: standard
    autoDeploy: true
    healthCheckPath: /
    envVars:
      - key: APP_ENV
        value: prod
      - key: APP_SECRET
        generateValue: true
      # Database URL will be set manually in dashboard (see below)
      - key: DATABASE_URL
        sync: false
      - key: REDIS_URL
        sync: false
      - key: TRUSTED_PROXIES
        value: 0.0.0.0/0,::/0
      - key: TRUSTED_HOSTS
        value: '.*'
      - key: SYMFONY_TRUSTED_PROXIES
        value: 0.0.0.0/0,::/0
      - key: SYMFONY_TRUSTED_HOSTS
        value: '.*'
      - key: MAILER_DSN
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_PUBLIC_KEY
        sync: false
      - key: OSRM_URL
        value: http://coopcycle-osrm:5000
    startCommand: >
      sh -lc "
        php bin/console doctrine:migrations:migrate --no-interaction &&
        php bin/console cache:clear --no-warmup &&
        php bin/console cache:warmup &&
        ./start.sh
      "

  # ---------------- WORKER (Symfony Messenger) ----------------
  - type: worker
    name: coopcycle-worker
    env: docker
    plan: starter
    autoDeploy: true
    envVars:
      - key: APP_ENV
        value: prod
      - key: APP_SECRET
        sync: false
      - key: DATABASE_URL
        sync: false
      - key: REDIS_URL
        sync: false
      - key: OSRM_URL
        value: http://coopcycle-osrm:5000
    startCommand: >
      sh -lc "
        php bin/console cache:warmup &&
        php bin/console messenger:consume async --time-limit=0 --memory-limit=256M -vv
      "

  # ---------------- OSRM (Routing service) ----------------
  - type: web
    name: coopcycle-osrm
    env: docker
    plan: standard
    autoDeploy: false
    envVars:
      - key: PORT
        value: 5000
    image:
      url: osrm/osrm-backend:latest
    startCommand: >
      bash -lc "
      set -euo pipefail;
      if [ ! -f /data/gb.osm.pbf ]; then
        curl -L -o /data/gb.osm.pbf https://download.geofabrik.de/europe/great-britain-latest.osm.pbf;
      fi;
      if [ ! -f /data/gb.osrm ]; then
        osrm-extract -p /opt/car.lua /data/gb.osm.pbf;
        osrm-partition /data/gb.osrm;
        osrm-customize /data/gb.osrm;
      fi;
      osrm-routed --algorithm mld /data/gb.osrm --port $PORT
      "
    disk:
      name: osrm-data
      mountPath: /data
      sizeGB: 10