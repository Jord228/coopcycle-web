@import "../../../../../assets/css/vars.scss";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/_mixins.scss";

$card-padding: 2rem;

// @see https://github.com/yahoo/react-stickynode/issues/9#issuecomment-173039715
@media (max-width: $screen-md-max){
  .sticky-inner-wrapper {
    position: static !important;
    transform: none !important;
    width: auto !important;
  }
}

.mobile-cart {
  display: none;

  @media (max-width: $screen-md-max) {
    display: block;
    cursor: pointer;
  }

  .panel-heading {
    position: relative;
    height: $navbar-height;
    display: flex;
    align-items: center;
    color: $white !important;
    background-color: $main-blue-light !important;

    &--warning {
      background-color: $state-warning-bg !important;
      color: $state-warning-text !important;
    }

    &__body {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

$restaurant-navbar-height: calc(25px + #{$base-margin});
$alert-height: calc(52px + #{$base-margin});

//FIXME; not all elements are taken into account, find a better way to calculate this
$top-elements-height: calc(#{$navbar-height} + #{$base-margin} + #{$restaurant-navbar-height} + #{$alert-height});

.sticky-outer-wrapper {
  .sticky-inner-wrapper {
    height: calc(100vh - #{$top-elements-height});
    display: flex;
    padding-top: $base-margin;
  }
}

.sticky-outer-wrapper.active {
  .sticky-inner-wrapper {
    height: calc(100vh);
  }
}

.order-wrapper {
  width: 100%;
  display: flex;
  flex-direction: column;

  @media (max-width: $screen-md-max) {
    height: 100%;
    background-color: $body-bg;
    padding: 0 1rem;

    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    transform: translateY(calc(100% - #{$navbar-height}));
    transition: transform 0.4s;
  }

  .panel {
    border: none;
    border-radius: 16px;
    box-shadow: 0 4px 16px 0 rgba(0, 0, 0, .03);
  }

  .panel-body {
    padding: $card-padding;
  }

  .panel-cart-wrapper {
    display: flex;
    flex-direction: column;
    overflow-y: auto;

    .panel-body {
      min-height: 350px;
      display: flex;
      flex-direction: column;
      overflow-y: auto;
      overflow-x: hidden;
    }
  }
}

.order-wrapper--show {
  @media (max-width: $screen-md-max) {
    transform: translateY(0);
  }
}

.fulfillment-details {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  .alert {
    width: 100%;
    margin-bottom: 0;
  }
}

.hub-order,
.group-order {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;

  .username {
    margin-bottom: 0.25rem;
    font-size: 20px;
    font-weight: 600;
  }
}

.cart__empty {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.cart__items {
  flex: 1;
  overflow-y: auto;
  margin: 0 (-$card-padding) 0;
  padding: 0 $card-padding 0;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.cart__item {
  padding-top: 0.5rem;
  border-bottom: 1px solid $gray-100;

  &__elements {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  &__quantity {
    display: flex;
    align-items: center;
    margin-left: -8px; //to compensate for padding around the button
  }
}

.cart__footer {
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid $gray-100;

  .cart__total {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
}

.cart__time {
  display: block;
  color: $state-success-text;
  &:hover,
  &:visited,
  &:focus {
    text-decoration: none;
  }
  &--not-today {
    color: $state-danger-text;
  }
  &__text,
  &__edit {
    display: block;
  }
  &__text {
  }
  &__edit {
  }
}

.cart__date-picker {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  > * {
    width: 45%;
  }
}

.button-composite {
  display: inline-flex;
  gap: 0.5rem;
  align-items: center;
}

.invite-to-order-button {
  flex: 1;
  min-width: 150px;
}

.order-button {
  flex: 2;
  min-width: 300px;
}
