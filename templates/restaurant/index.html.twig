{% extends "base.html.twig" %}

{% set restaurant_edit_route = is_granted('ROLE_ADMIN') ? 'admin_restaurant' : 'dashboard_restaurant' %}
{% set restaurant_edit_url = path(restaurant_edit_route, { id: restaurant.id }) %}
{% set restaurant_id = restaurant.id %}

{% form_theme cart_form 'form/cart.html.twig' %}

{% block structured_data %}
<script type="application/ld+json">
{{ restaurant|restaurant_microdata|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_UNESCAPED_SLASHES'))|raw }}
</script>
{% endblock %}

{% block banner %}

  {% set disabled_warning = ( not restaurant.enabled and (is_granted('ROLE_ADMIN') or is_granted('ROLE_RESTAURANT')) ) %}
  {% set preorder_warning = ( restaurant.isFulfillmentMethodEnabled('delivery') and restaurant.getFulfillmentMethod('delivery').orderingDelayMinutes > 0 ) %}
  {% set ordering_delay_warning = coopcycle_has_ordering_delay() %}

  {% if disabled_warning or preorder_warning or ordering_delay_warning %}
  <nav class="restaurant-banner {% if embed_context.enabled %}mt-0{% endif %}">
    <div class="alert alert-warning text-center">
      {% if disabled_warning %}
      <p class="mb-0">{{ 'restaurant.disabledWarning'|trans({ '%restaurantEditUrl%': restaurant_edit_url }) | raw }}</p>
      {% endif %}
      {% if preorder_warning %}
      <p class="mb-0">{{ 'restaurant.closedWarningWithDelay'|trans({
        '%delay%': restaurant.getFulfillmentMethod('delivery').orderingDelayMinutes|delay_for_humans(app.request.locale)
      }) }}</p>
      {% endif %}
      {% if ordering_delay_warning %}
      <p class="mb-0">ðŸ”¥Â {{ 'ordering_delay.disclaimer'|trans }}</p>
      {% endif %}
    </div>
  </nav>
  {% endif %}

{% endblock %}

{% block body %}
<div class="container-full-hd container-extra-space-on-sides px-3">

  {% block restaurant_nav %}
    {% if not embed_context.enabled %}
    <div class="homepage-restaurants__show-more text-left mb-4">
      {% if restaurant.belongsToHub() %}
        <a class="restaurant-show-more" href="{{ path('hub', { id: restaurant.hub.id, slug: restaurant.hub.name|slugify }) }}">
          <i class="fa fa-arrow-left mr-2"></i>
          <span>{% trans %}index.view_all_merchants{% endtrans %}</span>
        </a>
      {% elseif restaurant.context == 'AppBundle\\Enum\\Store' %}
        <a class="restaurant-show-more" href="{{ path('stores') }}">
          <i class="fa fa-arrow-left mr-2"></i>
          <span>{% trans %}index.view_all_shops{% endtrans %}</span>
        </a>
      {% else %}
        <a class="restaurant-show-more" href="{{ path('restaurants', app.request.query.all()) }}">
          <i class="fa fa-arrow-left mr-2"></i>
          <span>{% trans %}index.view_all_restaurants{% endtrans %}</span>
        </a>
      {% endif %}
    </div>
    {% endif %}
  {% endblock %}

  {#
  FIXME
  Calling restaurant.getNextOpeningDate() may throw Spatie\OpeningHours\Exceptions\MaximumLimitExceeded
  "No open date/time found in the next 366 days, use $openingHours->setDayLimit() to increase the limit."
  For example, set holidays for 2 years
  #}

  {% set cart = cart_provider.getCart() %}

  {% if not restaurant.isOpen %}
    {% set closingRule = restaurant.matchClosingRuleFor %}
    {% if closingRule is not empty %}
    <div class="alert alert-info text-center">
      {% trans with { '%date%': closingRule.endDate|format_datetime('full', 'none') } %}
      restaurant.temporaryClosedWarning
      {% endtrans %}
    </div>
    {% else %}
    <div class="alert alert-info text-center">
      {% set next_opening_date = restaurant.getNextOpeningDate() %}
      {% if next_opening_date %}
        {% set isOrderingAvailable = cart.shippingTimeRange is not null or times.range is not null or times.ranges|length > 0 %}
        {% if next_opening_date.isToday() %}
          {% trans with { '%time%': next_opening_date|format_datetime('none','short') } %}
          restaurant.closedOpensTodayLaterWarning
          {% endtrans %}
          {% if isOrderingAvailable %}
            {% trans %}restaurant.canOrderForLater{% endtrans %}
          {% endif %}
        {% elseif next_opening_date.isTomorrow() %}
          {% trans with { '%time%': next_opening_date|format_datetime('none','short') } %}
          restaurant.closedOpensTomorrowWarning
          {% endtrans %}
          {% if isOrderingAvailable %}
            {% trans %}restaurant.canOrderForTomorrow{% endtrans %}
          {% endif %}
        {% else %}
          {# after tomorrow #}
          {% trans with { '%date%': next_opening_date|format_datetime('full','none') } %}
          restaurant.closedOpensAfterTomorrowWarning
          {% endtrans %}
          {% if isOrderingAvailable %}
            {% trans %}restaurant.canOrderForOtherDay{% endtrans %}
          {% endif %}
        {% endif %}
      {% else %}
        {% trans %}
        restaurant.closedNowWarning
        {% endtrans %}
      {% endif %}
    </div>
    {% endif %}
  {% endif %}

  {% if restaurant.quotesAllowed %}
    {% set trans_params = {
      '%contact_us%': ('mailto:' ~ coopcycle_setting('administrator_email')),
      '%login%': path('nucleos_user_security_login')
    } %}
    {% if app.user %}
      {% if not app.user.quotesAllowed %}
        <div class="alert alert-info">
          <i class="fa fa-info-circle"></i>Â 
          {% trans with trans_params %}restaurant.quotes_disclaimer.authenticated{% endtrans %}
        </div>
      {% endif %}
    {% else %}
      <div class="alert alert-info">
        <i class="fa fa-info-circle"></i>Â 
        {% trans with trans_params %}restaurant.quotes_disclaimer.not_authenticated{% endtrans %}
      </div>
    {% endif %}
  {% endif %}

  <header class="restaurant-header">
    {% set restaurant_image = coopcycle_asset(restaurant, 'imageFile', 'restaurant_thumbnail') %}
    {% if restaurant_image is not empty %}
    <div class="restaurant-image position-relative">
      <img class="restaurant-image" src="{{ restaurant_image }}">
      {% if should_show_pre_order(restaurant) %}
      <figcaption>
        <div class="position-absolute w-100 h-100 bg-dark" style="opacity: 0.5;"></div>
        <div class="position-absolute text-white font-weight-bold d-flex flex-column justify-content-center align-items-center w-100 h-100 p-1">
          <i class="fa fa-clock-o"></i>
          <span>{{ 'restaurants.pre_order'|trans }}</span>
        </div>
      </figcaption>
    {% endif %}
    </div>
    {% endif %}
    <section class="restaurant-header-body">
      <h2 class="restaurant-name">{{ restaurant.name }}</h2>

      {% set badges = restaurant_badges(restaurant) %}
      {% set tags = restaurant_tags(restaurant) %}
      {% if badges is not empty or tags is not empty %}
      <div class="badges-and-tags">
        {% for badge in badges %}
          {% include "components/restaurant/restaurant_badge/restaurant_badge.html.twig" with {type: badge} %}
        {% endfor %}
        {% for tag in tags %}
          {% include "components/restaurant/restaurant_tag/restaurant_tag.html.twig" with {value: tag} %}
        {% endfor %}
      </div>
      {% endif %}

      <div> <i class="fa fa-map-marker"></i>Â Â {{ restaurant.address.streetAddress }}, {{ restaurant.address.postalCode }}, {{ restaurant.address.addressLocality }}</div>

      <section class="restaurant-description text-muted">
      {% if restaurant.description is defined and restaurant.description is not empty %}
          {{ restaurant.description|markdown_to_html }}
      {% endif %}
      </section>

      {% if restaurant.website is defined and restaurant.website is not empty %}
        <div>
          <a href="{{ restaurant.website }}" target="_blank">
            <i class="fa fa-external-link"></i>Â {{ 'localBusiness.form.website'|trans }}
          </a>
        </div>
      {% endif %}

      <div>
        <a class="restaurant-opening-hours" href="#" data-toggle="modal" data-target="#restaurant-opening-hours-modal">
          <i class="fa fa-clock-o"></i>Â {{ 'localBusiness.form.openingHours'|trans }}
        </a>
      </div>
    </section>
    <section class="restaurant-header-right">
    </section>
  </header>

  {% set menu = restaurant_menu(restaurant) %}

  {% if menu is not null %}
  <div class="row">

    {#
    WARNING
    We cache the following block for performance
    Iterating through all products, optionsâ€¦ is a lot of database requests
    #}
    {% set cache_key = restaurant|cache_key(restaurant_menu_cache_annotation ~ (business_context.active ? '_business' : '')) %}
    {% cache cache_key ttl(300) %}
    <div class="col-xs-12 col-sm-8" id="menu">
      {% set sections = [] %}
      {% for child in menu.children %}
        {% if child.products|length > 0 %}
          {% set sections = sections|merge([child]) %}
        {% endif %}
      {% endfor %}

      <nav {{ react_component('MenuNav', { 'sections': sections|coopcycle_normalize('Sylius\\Component\\Taxonomy\\Model\\TaxonInterface', ['restaurant_menu'], 'json') }) }}>
{#        server side rendered content; will be replaced by react #}
        <div class="ant-anchor">
          {% for section in sections %}
            <div class="ant-anchor-link">
              <a class="ant-anchor-link-title" href="#">{{ section.name }}</a>
            </div>
          {% endfor %}
        </div>
      </nav>

      <div class="restaurant-menu-wrapper">
      {% for section in sections %}
        <h4 id={{ section.name|url_encode }} class="restaurant-menu-section-name">{{ section.name }}</h4>
        {% if section.description is not empty %}
          <div class="text-muted">{{ section.description }}</div>
        {% endif %}
        <div class="restaurant-menu-section">
          {% for product in section.products %}
            {% set product_images = [] %}
            {% set images_16x9 = product.images|filter(image => image.ratio == '16:9') %}
            {% if images_16x9|length > 0 %}
              {% set product_images_filtered = images_16x9 %}
            {% else %}
              {% set product_images_filtered = product.images|filter(image => image.ratio == '1:1') %}
            {% endif %}
            {% for product_image in product_images_filtered %}
              {% set imagine_filter = ('product_thumbnail_' ~ (product_image.ratio|replace({ ':': 'x' }))) %}
              {% set product_images = product_images|merge([ coopcycle_asset(product_image, 'imageFile', imagine_filter, true, true) ]) %}
            {% endfor %}
            {% set card_product_image = null %}
            {% set images_1x1 = product.images|filter(image => image.ratio == '1:1') %}
            {% if images_1x1|length > 0 %}
              {% set card_product_image = coopcycle_asset(images_1x1|first, 'imageFile', 'product_thumbnail', true, true) %}
            {% endif %}
            {% include 'components/restaurant/product/menu_item.html.twig' %}
          {% endfor %}
        </div>
      {% endfor %}
      </div>
    </div>
    {% endcache %}

    {% if restaurant.isFulfillmentMethodEnabled('delivery') or restaurant.isFulfillmentMethodEnabled('collection') %}
    <div class="col-xs-12 col-sm-4">
      {{ form_start(cart_form, { attr: { 'data-cart-url': path('restaurant_cart', { id: restaurant.id }) } }) }}
        <div id="cart"></div>
      {{ form_end(cart_form) }}
    </div>
    {% else %}
      <div class="col-xs-12 col-sm-4">
        <div class="alert alert-warning">
          {% trans from 'validators' %}order.fulfillment_methods.empty{% endtrans %}
        </div>
      </div>
    {% endif %}

  </div>

  {% else %}
    <div class="alert alert-warning">
      {% trans %}restaurant.noMenuWarning{% endtrans %}
    </div>
  {% endif %}

</div>

<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="restaurant-opening-hours-modal-label" id="restaurant-opening-hours-modal">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="restaurant-opening-hours-modal-label">{% trans %}localBusiness.form.openingHours{% endtrans %}</h4>
      </div>
      <div class="modal-body">
        {% include 'restaurant/_partials/opening_hours.html.twig' with {
          delivery:   restaurant.isFulfillmentMethodEnabled('delivery')   ? restaurant.getOpeningHours('delivery')   : [],
          collection: restaurant.isFulfillmentMethodEnabled('collection') ? restaurant.getOpeningHours('collection') : []
        } %}
      </div>
    </div>
  </div>
</div>

{% set restaurant_json = { id: restaurant.id, isOpen: restaurant.isOpen } %}
{% set cart_json = cart_provider.normalize(cart) %}

<div id="js-restaurant-data"
  data-restaurant="{{ restaurant_json|json_encode|e('html_attr') }}"
  data-cart="{{ cart_json|json_encode|e('html_attr') }}"
  data-times="{{ times|json_encode|e('html_attr') }}"
  data-is-player="{{ (is_player is defined ? is_player : false)|json_encode|e('html_attr') }}"
  data-is-group-orders-enabled="{{ group_orders_enabled|json_encode|e('html_attr') }}"></div>

<div id="js-addresses-data"
  data-addresses="{{ addresses_normalized|json_encode|e('html_attr') }}"></div>

<div id="js-loopeat"
  data-context="{{ loopeat_context|json_encode|e('html_attr') }}"></div>

<div id="optins"
  data-brand-name={{ coopcycle_setting('brand_name')|json_encode|e('html_attr') }}></div>

{% endblock %}

{% block styles %}
{{ encore_entry_link_tags('restaurant-item') }}
{{ encore_entry_link_tags('optins') }}
{% endblock %}

{% block scripts %}
{{ encore_entry_script_tags('restaurant-item') }}
{{ encore_entry_script_tags('optins') }}
{% endblock %}
